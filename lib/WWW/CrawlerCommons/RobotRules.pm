=head1 NAME

WWW::CrawlerCommons::RobotRules - 

=head1 SYNOPSIS

 use WWW::CrawlerCommons::RobotRules;

=head1 DESCRIPTION


=cut

###############################################################################
package WWW::CrawlerCommons::RobotRules;

# MODULE IMPORTS
########################################
# Pragmas
#------------------#
use 5.10.1;
use strict;
use utf8;
use warnings;

# CPAN/Core
#------------------#
use Const::Fast;
use Try::Tiny;
use URI;
use URI::Escape;

# Moose Setup
#------------------#
use Moose;
use namespace::autoclean;

# Moose Pragmas
#------------------#

# Custom Modules
#------------------#



# VARIABLES/CONSTANTS
########################################
# Debug Constants
#------------------#
const my $DEBUG                 => $ENV{DEBUG} // 0;
const my $TEST                  => $ENV{TEST} // 1;

const my $ROBOT_RULES_MODE      =>
  [map {lc($_)} qw(ALLOW_ALL ALLOW_NONE ALLOW_SOME)];

# Constants
#------------------#

# Variables
#------------------#

# ATTRIBUTES
########################################
# Class
#------------------#
#-----------------------------------------------------------------------------#
#-----------------------------------------------------------------------------#

# Instance
#------------------#
#-----------------------------------------------------------------------------#
has '_mode'                     => (
    enum                        => $ROBOT_RULES_MODE,
    handles                     => 1,
    is                          => 'ro',
    required                    => 1,
    traits                      => ['Enumeration'],
);
#-----------------------------------------------------------------------------#
has '_rules'                    => (
    default                     => sub {[]},
    handles                     => {
        'add'                   => 'push',
        'get_rules'             => 'element',
    },
    is                          => 'ro',
    isa                         => 'ArrayRef[RobotRule]',
    traits                      => ['Array'],
);
#-----------------------------------------------------------------------------#

# METHODS
########################################
# Constructor
#------------------#
#-----------------------------------------------------------------------------#
#-----------------------------------------------------------------------------#

# Class Methods
#------------------#
#-----------------------------------------------------------------------------#
#-----------------------------------------------------------------------------#

# Instance Methods
#------------------#
#-----------------------------------------------------------------------------#
sub is_allowed {
    my ($self, $url) = @_;
    return 0 if $self->is_allow_none;
    return 1 if $self->is_allow_all;
    my $path_with_query = $self->_get_path( $url, 1);

    # always allow robots.txt
    return 1 if $path_with_query eq '/robots.txt';

    for my $rule ($self->get_rules) {
        return 1 if $self->_rule_matches( $path_with_query, $rule->prefix );
    }

    return 1;
}
#-----------------------------------------------------------------------------#

# Private Methods
#------------------#
#-----------------------------------------------------------------------------#
sub _get_path() {
    my ($self, $url, $with_query) = @_;

    try {
        my $uri = URI->new( $url );
        my $path = $uri->path();
        my $query = $uri->path_query() // '';

        $path .= '?' + $query if ($with_query && $query ne ''); 

        if (not(defined($path)) || $path eq '') {
            return '/';
        }
        else {
            return uri_unescape( $url );
        }
    }
    catch {
        return '/';
    };
}
#-----------------------------------------------------------------------------#
###############################################################################

__PACKAGE__->meta->make_immutable;

###############################################################################

=head1 NAME

WWW::CrawlerCommons::RobotRule - 

=head1 SYNOPSIS

 use WWW::CrawlerCommons::RobotRule;

=head1 DESCRIPTION


=cut

###############################################################################
package WWW::CrawlerCommons::RobotRule;

# MODULE IMPORTS
########################################
# Pragmas
#------------------#
use 5.10.1;
use strict;
use utf8;
use warnings;

# CPAN/Core
#------------------#
use Const::Fast;
use Try::Tiny;

# Moose Setup
#------------------#
use Moose;
use namespace::autoclean;

# Moose Pragmas
#------------------#

# Custom Modules
#------------------#



# VARIABLES/CONSTANTS
########################################
# Debug Constants
#------------------#

# Constants
#------------------#

# Variables
#------------------#

# ATTRIBUTES
########################################
# Class
#------------------#
#-----------------------------------------------------------------------------#
#-----------------------------------------------------------------------------#

# Instance
#------------------#
#-----------------------------------------------------------------------------#
has '_allow'                    => (
    is                          => 'ro',
    isa                         => 'Bool',
    
);
#-----------------------------------------------------------------------------#

# METHODS
########################################
# Constructor
#------------------#
#-----------------------------------------------------------------------------#
#-----------------------------------------------------------------------------#

# Class Methods
#------------------#
#-----------------------------------------------------------------------------#
#-----------------------------------------------------------------------------#

# Instance Methods
#------------------#
#-----------------------------------------------------------------------------#
#-----------------------------------------------------------------------------#

# Private Methods
#------------------#
#-----------------------------------------------------------------------------#
#-----------------------------------------------------------------------------#
###############################################################################

__PACKAGE__->meta->make_immutable;

###############################################################################

1;

__END__